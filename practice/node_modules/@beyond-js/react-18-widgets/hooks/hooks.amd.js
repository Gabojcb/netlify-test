define(["exports", "module", "@beyond-js/kernel/bundle", "react", "@beyond-js/kernel/texts"], function (_exports, _amd_module, dependency_0, dependency_1, dependency_2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.useTexts = _exports.useBinder = _exports.hmr = _exports.__beyond_pkg = void 0;
  const {
    Bundle: __Bundle
  } = dependency_0;
  const __pkg = new __Bundle({
    "module": {
      "vspecifier": "@beyond-js/react-18-widgets@1.0.1/hooks"
    },
    "type": "ts"
  }, _amd_module.uri).package();
  ;
  __pkg.dependencies.update([['react', dependency_1], ['@beyond-js/kernel/texts', dependency_2]]);
  const ims = new Map();

  /***********************
  INTERNAL MODULE: ./index
  ***********************/

  ims.set('./index', {
    hash: 364360737,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.useBinder = useBinder;
      var React = require("react");
      /*bundle*/ /***
                  * Executes a useEffect hook binging the event defined in all
                  * objects passed
                  *
                  * @param {array} objects Objects to bind
                  * @param {function} onBinder function to be executed when the event is fired
                  * @param {string} event the event to be listened, by default is event change
                  */
      function useBinder(objects, onBinder, event = 'change') {
        React.useEffect(() => {
          objects.forEach(object => {
            if (!object) throw new Error(`object is not valid in useBinder ${object}`);
            object.on(event, onBinder);
          });
          return () => objects.forEach(object => object.off(event, onBinder));
        }, []);
      }
    }
  });

  /***************************
  INTERNAL MODULE: ./use-texts
  ***************************/

  ims.set('./use-texts', {
    hash: 2878044955,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.useTexts = useTexts;
      var React = require("react");
      var _texts = require("@beyond-js/kernel/texts");
      /*bundle*/
      function useTexts(specifier, key) {
        const [ready, setReady] = React.useState(false);
        const [texts, setTexts] = React.useState({});
        React.useEffect(() => {
          const modelTexts = new _texts.CurrentTexts(specifier);
          const triggerEvent = () => {
            let value = modelTexts.value;
            if (modelTexts.ready && key) {
              if (!value.hasOwnProperty(key)) {
                console.warn(`the key specified for texts was not found. Key passed: ${key}, module specifier: ${specifier}`);
              }
              //@ts-ignore
              value = modelTexts.value[key];
            }
            setTexts(value);
            setReady(modelTexts.ready);
          };
          modelTexts.on('change', triggerEvent);
          triggerEvent();
          return () => {
            modelTexts.on('change', triggerEvent);
          };
        }, []);
        const isReady = ready && !!texts;
        return [isReady, texts];
      }
    }
  });
  __pkg.exports.descriptor = [{
    "im": "./index",
    "from": "useBinder",
    "name": "useBinder"
  }, {
    "im": "./use-texts",
    "from": "useTexts",
    "name": "useTexts"
  }];
  let useBinder, useTexts;

  // Module exports
  _exports.useTexts = useTexts;
  _exports.useBinder = useBinder;
  __pkg.exports.process = function ({
    require,
    prop,
    value
  }) {
    (require || prop === 'useBinder') && (_exports.useBinder = useBinder = require ? require('./index').useBinder : value);
    (require || prop === 'useTexts') && (_exports.useTexts = useTexts = require ? require('./use-texts').useTexts : value);
  };
  const __beyond_pkg = __pkg;
  _exports.__beyond_pkg = __beyond_pkg;
  const hmr = new function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
  }();
  _exports.hmr = hmr;
  __pkg.initialise(ims);
});
//# sourceMappingURL=hooks.amd.js.map